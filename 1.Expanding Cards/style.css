.panel {
    background-size: cover;
    height: 80vh;
    border-radius: 50px;
    color: #fff;
    cursor: pointer;
    /* Specifies the extent to which it will grow and shrink when the area narrows or expands. */
    flex: 0.5;
    margin: 8px;
    /* A parent point is determined to make positional adjustments on the titles. */
    position: relative;
    /* Specifies a 0.6-second time for transitions in flex property with ease-in for a smooth effect. */
    transition: flex 0.6s ease-in;
}

.panel.active {
    /* Specifies the extent to which it will grow and shrink when the area narrows or expands. */
    flex: 5;
}

.panel.active h3 {
    /* Set to opacity 1 for the first card to be visible when the page opens. */
    opacity: 1;
    /* Added a transition to improve the appearance of text transitions. */
    transition: opacity 0.3s ease-in 0.4s;
}

/* Closes the last two tabs when the screen size is less than 600px. */
@media (max-width: 600px) {
    /* Sets the width of the main "container" class to 100% of the viewport. */
    .container {
        width: 100vw;
    }
    /* Hides the fourth and fifth elements of the "panel" class. */
    .panel:nth-of-type(4), .panel:nth-of-type(5) {
        display: none;
    }
}

.panel h3 {
    font-size: 1.3em;
    /* Applies the following changes to h3 elements within the panel class as children of the respective parent. */
    position: absolute;
    bottom: 20px;
    left: 20px;
    margin: 0;
    /* Sets opacity to 0 to display only images under normal conditions and reveal titles after a click event. */
    opacity: 0;
}

* {
    /* Ensures that all box sizes are the same. Padding or margin applications create consistent spacing towards the inner part of the box. */
    box-sizing: border-box;
}

body {
    font-family: 'Times New Roman', Times, serif;
    /* Sets the display property to flex for the specified body, making the elements appear side by side. */
    display: flex;
    align-items: center;
    justify-content: center;
    /* Used to cover the entire page for the respective body. */
    height: 100vh;
    /* If the image overflows, the overflow property is set to hidden to hide the excess. */
    overflow: hidden;
    margin: 0;
}

.container {
    /* Sets the display property to flex for the specified container, making the elements appear side by side. */
    display: flex;
    /* Sets the width to 90% of the viewport width. */
    width: 90vw;
}
